apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xeksauto.aws.moonorb.com
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: aws.moonorb.com/v1alpha1
    kind: XEKS
  mode: Pipeline
  pipeline:
    - step: go-templating
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        delims:
          left: "[["
          right: "]]"
        inline:
          template: |
            [[ $spec := $.observed.composite.resource.spec.parameters ]]
            [[ $region := $spec.region ]]
            [[ $providerConfigRef := $spec.providerConfigName ]]
            [[ $deletionPolicy := $spec.deletionPolicy | default "Delete" ]]
            
            [[ range $i, $cidr := $spec.additionalCidrIpv4 ]]
            ---
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: SecurityGroupIngressRule
            metadata:
              name: [[ $spec.id ]]-sg-ingress-[[ $i ]]
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: [[ $spec.id ]]-sg-ingress-[[ $i ]]
            spec:
              forProvider:
                cidrIpv4: [[ $cidr ]]
                fromPort: 443
                toPort: 443
                ipProtocol: tcp
                securityGroupIdSelector:
                  matchControllerRef: true
                region: [[ $region ]]
              providerConfigRef:
                name: [[ $providerConfigRef ]]
              deletionPolicy: [[ $deletionPolicy ]]
            [[ end ]]

    - step: patch-and-transform
      functionRef:
        name: function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        patchSets:
          - name: providerConfigRef
            patches:
              - fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.providerConfigRef.name
                type: FromCompositeFieldPath
          - name: deletionPolicy
            patches:
              - fromFieldPath: spec.parameters.deletionPolicy
                toFieldPath: spec.deletionPolicy
                type: FromCompositeFieldPath
          - name: region
            patches:
              - fromFieldPath: spec.parameters.region
                toFieldPath: spec.forProvider.region
                type: FromCompositeFieldPath
        resources:
          - name: AmazonEKSAutoClusterRole
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: Role
              metadata:
                labels:
                  role: clusterrole
              spec:
                forProvider:
                  assumeRolePolicy: |
                    {
                      "Version": "2012-10-17",
                      "Statement": [
                          {
                              "Effect": "Allow",
                              "Principal": {
                                  "Service": [
                                      "eks.amazonaws.com"
                                  ]
                              },
                              "Action": [
                                  "sts:AssumeRole",
                                  "sts:TagSession"
                              ]
                          }
                      ]
                    }
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.tags
                toFieldPath: spec.forProvider.tags
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: 'amazon-eks-auto-cluster-role-%s'
                      type: Format
                    type: string
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.annotations[crossplane.io/external-name]
                transforms:
                  - string:
                      fmt: 'AmazonEKSAutoClusterRole-%s'
                      type: Format
                    type: string

          - name: BlockStoragePolicyAttachment
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: RolePolicyAttachment
              spec:
                forProvider:
                  policyArn: arn:aws:iam::aws:policy/AmazonEKSBlockStoragePolicy
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: clusterrole
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet


          - name: AmazonEKSClusterPolicyAttachment
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: RolePolicyAttachment
              spec:
                forProvider:
                  policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: clusterrole
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet

          - name: AmazonEKSComputePolicyAttachment
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: RolePolicyAttachment
              spec:
                forProvider:
                  policyArn: arn:aws:iam::aws:policy/AmazonEKSComputePolicy
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: clusterrole
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet

          - name: AmazonEKSLoadBalancingPolicyAttachment
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: RolePolicyAttachment
              spec:
                forProvider:
                  policyArn: arn:aws:iam::aws:policy/AmazonEKSLoadBalancingPolicy
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: clusterrole
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet

          - name: AmazonEKSNetworkingPolicyAttachment
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: RolePolicyAttachment
              spec:
                forProvider:
                  policyArn: arn:aws:iam::aws:policy/AmazonEKSNetworkingPolicy
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: clusterrole
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet                

          - name: kubernetesClusterAutoMode
            base:
              apiVersion: eks.aws.upbound.io/v1beta2
              kind: Cluster
              spec:
                forProvider:
                  roleArnSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: clusterrole
                  vpcConfig:
                    endpointPrivateAccess:
                    endpointPublicAccess:
                    subnetIds:
                    publicAccessCidrs:
                  bootstrapSelfManagedAddons: false
                  accessConfig:
                    authenticationMode: "API_AND_CONFIG_MAP"   
                    bootstrapClusterCreatorAdminPermissions: true                
                initProvider:
                  computeConfig:
                    enabled: true
                    nodeRoleArn: ""
                    nodePools:
                      - "system"
                      - "general-purpose"
                  kubernetesNetworkConfig:
                    elasticLoadBalancing:
                      enabled: true
                  storageConfig:
                    blockStorage:
                      enabled: true
            connectionDetails:
              - type: FromConnectionSecretKey
                name: kubeconfig
                fromConnectionSecretKey: kubeconfig
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - patchSetName: region
                type: PatchSet
              # Updated vpcConfig patches to use object notation instead of array
              - fromFieldPath: spec.parameters.subnetIds
                toFieldPath: spec.forProvider.vpcConfig.subnetIds
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.publicAccessCidrs
                toFieldPath: spec.forProvider.vpcConfig.publicAccessCidrs
                type: FromCompositeFieldPath                  
              - fromFieldPath: spec.parameters.endpointPrivateAccess
                toFieldPath: spec.forProvider.vpcConfig.endpointPrivateAccess
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.endpointPublicAccess
                toFieldPath: spec.forProvider.vpcConfig.endpointPublicAccess
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.version
                toFieldPath: spec.forProvider.version
                type: FromCompositeFieldPath
              # Updated status patches to use object notation
              - fromFieldPath: status.atProvider.identity[0].oidc[0].issuer
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.oidc
                type: ToCompositeFieldPath
              - fromFieldPath: status.atProvider.identity[0].oidc[0].issuer
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.oidcUri
                transforms:
                  - string:
                      trim: https://
                      type: TrimPrefix
                    type: string
                type: ToCompositeFieldPath
              - fromFieldPath: status.atProvider.roleArn
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.accountId
                transforms:
                  - string:
                      regexp:
                        group: 1
                        match: arn:aws:iam::(\d+):.*
                      type: Regexp
                    type: string
                type: ToCompositeFieldPath
              # Updated clusterSecurityGroupId patch to use object notation
              - fromFieldPath: status.atProvider.vpcConfig.clusterSecurityGroupId
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.clusterSecurityGroupId
                type: ToCompositeFieldPath
              - fromFieldPath: spec.parameters.id 
                toFieldPath: metadata.name
              - fromFieldPath: spec.parameters.id 
                toFieldPath: metadata.annotations[crossplane.io/external-name]
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.tags
                toFieldPath: spec.forProvider.tags
              - fromFieldPath: metadata.labels
                toFieldPath: metadata.labels
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.authenticationMode
                toFieldPath: spec.forProvider.accessConfig.authenticationMode
                policy:
                  fromFieldPath: Optional
              - fromFieldPath: status.eks.nodeGroupRoleArn
                toFieldPath: spec.initProvider.computeConfig.nodeRoleArn
                type: FromCompositeFieldPath
                policy:
                  fromFieldPath: Optional

#######################################################


          - name: clusterSecurityGroupImport
            base:
              apiVersion: ec2.aws.upbound.io/v1beta1
              kind: SecurityGroup
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - patchSetName: region
                type: PatchSet
              - fromFieldPath: status.eks.clusterSecurityGroupId
                policy:
                  fromFieldPath: Required
                toFieldPath: metadata.annotations[crossplane.io/external-name]
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.tags[eks.aws.platform.upbound.io/discovery]
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.tags
                toFieldPath: spec.forProvider.tags
                
          - name: irsaSettings
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                deletionPolicy: Orphan
                forProvider:
                  manifest:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      namespace: default
            patches:
              - fromFieldPath: spec.parameters.id
                toFieldPath: spec.providerConfigRef.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-irsa-settings'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.id
                toFieldPath: spec.forProvider.manifest.metadata.name
                transforms:
                  - string:
                      fmt: '%s-irsa-settings'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: status.eks.oidcArn
                toFieldPath: spec.forProvider.manifest.data.oidc_arn
                type: FromCompositeFieldPath
              - fromFieldPath: status.eks.oidcUri
                toFieldPath: spec.forProvider.manifest.data.oidc_host
                type: FromCompositeFieldPath
            readinessChecks:
              - type: None

          - name: kubernetesClusterAuth
            base:
              apiVersion: eks.aws.upbound.io/v1beta1
              kind: ClusterAuth
              spec:
                forProvider:
                  clusterNameSelector:
                    matchControllerRef: true
                writeConnectionSecretToRef:
                  namespace: crossplane-system
            connectionDetails:
              - fromConnectionSecretKey: kubeconfig
                name: kubeconfig
                type: FromConnectionSecretKey
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - patchSetName: region
                type: PatchSet
              - fromFieldPath: metadata.uid
                toFieldPath: spec.writeConnectionSecretToRef.name
                transforms:
                  - string:
                      fmt: '%s-ekscluster'
                      type: Format
                    type: string
                type: FromCompositeFieldPath

          - name: AmazonEKSAutoNodeRole
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: Role
              metadata:
                labels:
                  role: nodegroup
              spec:
                forProvider:
                  assumeRolePolicy: |
                    {
                      "Version": "2012-10-17",
                      "Statement": [
                          {
                              "Effect": "Allow",
                              "Principal": {
                                  "Service": [
                                      "ec2.amazonaws.com"
                                  ]
                              },
                              "Action": [
                                  "sts:AssumeRole"
                              ]
                          }
                      ]
                    }
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - fromFieldPath: status.atProvider.arn
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.nodeGroupRoleArn
                type: ToCompositeFieldPath
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.tags
                toFieldPath: spec.forProvider.tags
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: 'amazon-eks-auto-node-role-%s'
                      type: Format
                    type: string
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.annotations[crossplane.io/external-name]
                transforms:
                  - string:
                      fmt: 'AmazonEKSAutoNodeRole-%s'
                      type: Format
                    type: string

          - name: EcrPolicyAttachment
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: RolePolicyAttachment
              spec:
                forProvider:
                  policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPullOnly
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: nodegroup
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet

          - name: WorkerNodePolicyAttachment
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: RolePolicyAttachment
              spec:
                forProvider:
                  policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodeMinimalPolicy
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: nodegroup
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet

          - name: NodeInstanceProfile
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: InstanceProfile
              spec:
                forProvider:
                  roleSelector:
                    matchControllerRef: true
                    matchLabels:
                      role: nodegroup
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.tags
                toFieldPath: spec.forProvider.tags
              - type: ToCompositeFieldPath
                fromFieldPath: status.atProvider.id
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.instanceProfileName
              - type: ToCompositeFieldPath
                fromFieldPath: status.atProvider.arn
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.instanceProfileArn
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: 'amazon-eks-auto-node-instance-profile-%s'
                      type: Format
                    type: string
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.annotations[crossplane.io/external-name]
                transforms:
                  - string:
                      fmt: 'AmazonEKSAutoNodeInstanceProfile-%s'
                      type: Format
                    type: string

          - name: oidcProvider
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: OpenIDConnectProvider
              spec:
                forProvider:
                  clientIdList:
                    - sts.amazonaws.com
                  thumbprintList:
                    - 9e99a48a9960b14926bb7f3b02e22da2b0ab7280
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - fromFieldPath: status.eks.oidc
                policy:
                  fromFieldPath: Required
                toFieldPath: spec.forProvider.url
                type: FromCompositeFieldPath
              - fromFieldPath: status.atProvider.arn
                policy:
                  fromFieldPath: Optional
                toFieldPath: status.eks.oidcArn
                type: ToCompositeFieldPath

          - name: providerConfigHelm
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: ProviderConfig
              spec:
                credentials:
                  secretRef:
                    key: kubeconfig
                    namespace: crossplane-system
                  source: Secret
            patches:
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-helm'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - fromFieldPath: metadata.uid
                toFieldPath: spec.credentials.secretRef.name
                transforms:
                  - string:
                      fmt: '%s-ekscluster'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
            readinessChecks:
              - type: None
         

          - name: providerConfigKubernetes
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: ProviderConfig
              spec:
                credentials:
                  secretRef:
                    key: kubeconfig
                    namespace: crossplane-system
                  source: Secret
            patches:
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
                type: FromCompositeFieldPath  
              - fromFieldPath: metadata.uid
                toFieldPath: spec.credentials.secretRef.name
                transforms:
                  - string:
                      fmt: '%s-ekscluster'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
            readinessChecks:
              - type: None

          - name: awsAuth
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                deletionPolicy: Orphan
                forProvider:
                  manifest:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      name: aws-auth
                      namespace: kube-system
            patches:
              - fromFieldPath: spec.parameters.id
                toFieldPath: spec.providerConfigRef.name
                type: FromCompositeFieldPath
              - fromFieldPath: spec.parameters.id
                toFieldPath: metadata.name
                transforms:
                  - string:
                      fmt: '%s-aws-auth'
                      type: Format
                    type: string
                type: FromCompositeFieldPath
              - combine:
                  strategy: string
                  string:
                    fmt: |
                      - groups:
                        - system:bootstrappers
                        - system:nodes
                        rolearn: %s
                        username: system:node:{{EC2PrivateDNSName}}
                      - groups:
                        - system:masters
                        rolearn: %s
                        username: adminrole
                  variables:
                    - fromFieldPath: status.eks.nodeGroupRoleArn
                    - fromFieldPath: spec.parameters.iam.roleArn
                policy:
                  fromFieldPath: Optional
                toFieldPath: spec.forProvider.manifest.data.mapRoles
                type: CombineFromComposite
              - combine:
                  strategy: string
                  string:
                    fmt: |
                      - groups:
                        - system:masters
                        userarn: %s
                        username: adminuser
                  variables:
                    - fromFieldPath: spec.parameters.iam.userArn
                policy:
                  fromFieldPath: Optional
                toFieldPath: spec.forProvider.manifest.data.mapUsers
                type: CombineFromComposite


          - name: clusterAccessEntry
            base:
              apiVersion: eks.aws.upbound.io/v1beta1
              kind: AccessEntry
              spec:
                forProvider:
                  clusterNameSelector:
                    matchControllerRef: true
                  type: STANDARD
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - patchSetName: region
                type: PatchSet
              - fromFieldPath: spec.parameters.iam.roleArn
                toFieldPath: spec.forProvider.principalArn
                type: FromCompositeFieldPath
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.tags
                toFieldPath: spec.forProvider.tags

          - name: clusterAccessPolicyAssociation
            base:
              apiVersion: eks.aws.upbound.io/v1beta1
              kind: AccessPolicyAssociation
              spec:
                forProvider:
                  clusterNameSelector:
                    matchControllerRef: true
                  policyArn: arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy
                  accessScope:
                    type: cluster
            patches:
              - patchSetName: providerConfigRef
                type: PatchSet
              - patchSetName: deletionPolicy
                type: PatchSet
              - patchSetName: region
                type: PatchSet
              - fromFieldPath: spec.parameters.iam.roleArn
                toFieldPath: spec.forProvider.principalArn
                type: FromCompositeFieldPath

    - step: filter-composed-resources
      functionRef:
        name: function-cel-filter
      input:
        apiVersion: cel.fn.crossplane.io/v1beta1
        kind: Filters
        filters:
        - name: irsaSettings
          expression: observed.composite.resource.spec.parameters.authenticationMode != "API"
        - name: awsAuth
          expression: observed.composite.resource.spec.parameters.authenticationMode != "API"
          
    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: function-auto-ready
